SELECT TOP (1000) *
FROM dw.Forsakring

SELECT Affarstyp, COUNT(Affarstyp)
  FROM [Datawarehouse].[dw].[Forsakring]
  WHERE Status = 'Gällande'
  AND Datering BETWEEN '2018-01-01' AND '2018-12-31'
  GROUP BY Affarstyp

  SELECT Affarstyp, COUNT(Affarstyp)
  FROM dw.Forsakring
  WHERE Status = 'Gällande'
  AND Tjanstepension = 'j'
  GROUP BY Affarstyp

  SELECT *
  FROM dw.Forsakring
  WHERE Affarstyp IS NULL
  AND Status = 'Gällande'
  AND Tjanstepension = 'j'

  
CREATE TABLE #Temp(
KundforetagID INT,
Orgnr VARCHAR (10)
)

DROP TABLE #Temp

INSERT INTO #Temp (KundforetagID, Orgnr) 

SELECT DISTINCT kf.KundforetagID, kf.Orgnr
FROM dw.Kundforetag kf
WHERE kf.Aktiv = 'j'
-- Plocka bort IBM
AND kf.Orgnr != '5560266883'
-- Kontrollera ersättning
AND (EXISTS (select 1 from dw.Prov_Provision p where p.Period  BETWEEN '2018-01' AND '2018-12' AND p.ForsakringstagareOrgnr = kf.Orgnr)
OR EXISTS (select 1 from dw.Arvode ar where ar.Period BETWEEN '2018-01' and '2018-12' AND ar.Orgnr = kf.Orgnr))

SELECT t.KundforetagID, t.Orgnr, COUNT(k.KundforetagID) AS 'Aktiva Anställda'
FROM #Temp t
JOIN dw.Kund k ON t.KundforetagID = k.KundforetagID
WHERE k.Aktiv = 'j'
GROUP BY t.KundforetagID, t.Orgnr

SELECT * FROM dw.Kund
WHERE Aktiv = 'j'
AND KundforetagID IN (SELECT KundforetagID FROM #Temp)
--144.910 aktiva Kundindivider från Kundföretag vi tjänat pengar på under 2018

SELECT
t.Orgnr,
SUM(pp.ProvisionNetto) AS 'Provision'
FROM #Temp t
LEFT JOIN dw.Prov_Provision pp ON t.Orgnr = pp.ForsakringstagareOrgnr
WHERE pp.Period BETWEEN '2018-01' AND '2018-12'
GROUP BY t.Orgnr

SELECT
t.Orgnr,
SUM(a.Belopp) AS 'Belopp'
FROM #Temp t
LEFT JOIN dw.Arvode a ON t.Orgnr = a.Orgnr
WHERE a.Period BETWEEN '2018-01' AND '2018-12'
GROUP BY t.Orgnr


=============================================================================

DROP TABLE #Temp

CREATE TABLE #Temp(
År INT,
MinDate VARCHAR (10),
MaxDate VARCHAR (10),
KundforetagID INT,
KundID INT,
RadgivarID INT,
Pnr VARCHAR (12),
Provisionstyp VARCHAR (50),
Provision NUMERIC (24,8)
)

INSERT INTO #Temp (År, MinDate, MaxDate, KundforetagID, KundID, RadgivarID, Pnr)

SELECT
one.År,
one.MinDate,
one.MaxDate,
one.KundforetagID,
one.KundID,
one.RadgivarID,
one.Pnr
FROM(
SELECT LEFT(hk.Datum, 4) AS 'År', MIN(hk.Datum) AS 'MinDate', MAX(hk.Datum) AS 'MaxDate', hk.KundforetagID, hk.KundID, hk.RadgivarID, hk.Pnr
FROM dw.Hist_Kund hk
GROUP BY LEFT(hk.Datum, 4), hk.KundforetagID, hk.KundID, hk.RadgivarID, hk.Pnr) one
WHERE one.MinDate >= '2014-01-01' AND one.MaxDate <= '2018-12-31'
ORDER BY KundforetagID, År

DROP TABLE dbo.Hist_Kund

CREATE TABLE dbo.Hist_Kund(
År INT,
MinDate VARCHAR (10),
MaxDate VARCHAR (10),
KundforetagID INT,
KundID INT,
RadgivarID INT,
Pnr VARCHAR (12),
Provisionstyp VARCHAR (50),
Provision NUMERIC (24,8)
)

INSERT INTO dbo.Hist_Kund(År, MinDate, MaxDate, KundforetagID, KundID, RadgivarID, Pnr, Provisionstyp, Provision)

  SELECT
  t.År,
  t.MinDate,
  t.MaxDate,
  t.KundforetagID,
  t.KundID,
  t.RadgivarID,
  t.Pnr,
  a.Provisionstyp,
  a.Provision
  FROM(
	SELECT LEFT(pp.Period, 4) AS 'År', pp.provisionstyp, pp.ForsakradPnr, SUM(pp.ProvisionNetto) AS 'Provision'
	FROM dw.Prov_Provision pp
	WHERE ForsakradPnr IS NOT NULL
	GROUP BY LEFT(pp.Period, 4), pp.provisionstyp, pp.ForsakradPnr) a
  RIGHT JOIN #Temp t ON a.ForsakradPnr = t.Pnr AND a.År = t.År
  ORDER BY a.ForsakradPnr, a.År
  
  =================================================================================
  
  SELECT
	hk.År,
	hk.MinDate,
	hk.MaxDate,
	hk.KundforetagID,
	hk.KundID,
	hk.RadgivarID,
	hk.Pnr,
	hk.Provisionstyp,
	hk.Provision,
	CASE
		WHEN pp.Produktgrupp = 'Navigera' THEN pp.ProvisionNetto
	END AS 'Navigera',
	CASE
		WHEN pp.Produktgrupp = 'Maxfonder' THEN pp.ProvisionNetto
	END AS 'Maxfonder',
	CASE
		WHEN pp.Produktgrupp IN ('Privat', 'ISK') THEN pp.ProvisionNetto
	END AS 'Privat',
	CASE
		WHEN pp.Produktgrupp NOT IN ('Navigera', 'Maxfonder', 'Privat', 'ISK')
		AND pp.Provisionstyp IN ('Premieersättning','Konverteringsavgift','Korrigeringar','Manuell transaktion','Provision','Styckersättning','Up-front','Återtag','Annullation') THEN pp.ProvisionNetto
	END AS 'Premieersättning',
	CASE
		WHEN pp.Produktgrupp NOT IN ('Navigera', 'Maxfonder', 'Privat', 'ISK')
		AND pp.Provisionstyp = 'Engångspremie' THEN pp.ProvisionNetto
	END AS 'Engångspremie',
	CASE
		WHEN pp.Produktgrupp NOT IN ('Navigera', 'Maxfonder', 'Privat', 'ISK')
		AND pp.Provisionstyp = 'Kapitalersättning' THEN pp.ProvisionNetto
	END AS 'KapitalErsättning'
  FROM [Datawarehouse].[dbo].[Hist_Kund] hk
  LEFT JOIN dw.Prov_Provision pp ON hk.Pnr = pp.ForsakradPnr AND hk.År = LEFT(pp.Period, 4)
